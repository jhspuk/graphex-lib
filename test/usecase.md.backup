# Desired behaviour
## Introduction
This document is a list of examples and written text to help define desired behaviour - they are not instructive of the final library - symbols and architecture may change.

## Examples
### Example 1: Link multiple files with inputs and watches 

Petrinet::File file1('[...location 1]');\
Petrinet::File file2('[...location 2]');\
Petrinet::File file3('[...location 3]');\
Petrinet::File file4('[...location 4]');

Petrinet::Input i1;

i1.register(func* callback, char* name);

Petrinet::Graph graph1;

graph1.add(file1);\
graph1.add(file2);\
graph1.add(file3);\
graph1.add(file4);

graph1.clean();

### Example 1 explanation

Different Petrinets are loaded by different files. This will determine the multithreading aspect - each file is a different region where 1 thread can run. Parallel threads can occur where there are multiple regions. When each are loaded, they are unlinked and not able to be run.

Then, with the symbols (labels for transitions and places), inputs are attached, in this case function pointers.

With this labels, the separate loaded petrinets can then be combined into one large network (multithreading as)